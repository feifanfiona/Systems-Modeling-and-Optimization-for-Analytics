#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Nov 14 13:10:17 2020

@author: fionafei
"""

import cvxpy as cp

x = cp.Variable((5,1), integer = True) # vector variable
z = cp.Variable((3,1), boolean = True)
w = cp.Variable((2,1), boolean = True)


#obj_func=170*x[0]+220*x[1]+250*x[2]+55*x[3]
obj_func_neg=10*z[0,0]+0.05*x[0,0]+0.04*x[1,0]+20*z[1,0]+0.04*x[2,0]+25*z[2,0]
+0.05*x[3,0]+0.035*x[4,0]

constraints = []
constraints.append(x[0,0]+x[1,0]+x[2,0]+x[3,0]+x[4,0]>=3000)
constraints.append(x>=0)
constraints.append(x[0,0]+x[1,0]<=z[0,0]*3000)
constraints.append(x[2,0]<=z[1,0]*3000)
constraints.append(x[3,0]+x[4,0]<=z[2,0]*3000)
constraints.append(x[0,0]<=1000)
constraints.append(x[0,0]>=1000*w[0,0])
constraints.append(x[1,0]<=3000*w[0,0])
constraints.append(x[3,0]<=1000)
constraints.append(x[3,0]>=1000*w[1,0])
constraints.append(x[4,0]<=3000*w[1,0])
constraints.append(z[0,0]+z[1,0]+z[2,0]==1)


#problem = cp.Problem(cp.Maximize(obj_func), constraints)
problem = cp.Problem(cp.Minimize(obj_func_neg), constraints)

#problem.solve(solver=cp.CVXOPT,verbose = True)
#problem.solve(verbose = True)
problem.solve(solver=cp.GUROBI,verbose = True)

print("obj_func =")
#print(obj_func.value)
print(obj_func_neg.value)
print("x =")
print(x.value)
